import ftx


defult_pairs = ['XLM-PERP', 'XRP-PERP', 'DOGE-PERP']
available_pairs = ['XLM-PERP', 'XRP-PERP', 'DOGE-PERP']
traded_pairs_long = []
traded_pairs_short = []



class Trade():

    def __init__(self):
        self.api_key = '*****'
        self.secret_key = '*****'
        self.agent = None
        self.balance = None
        self.F = dict.fromkeys(defult_pairs)

    def create_agent(self):

        self.agent = ftx.FtxClient(api_key=self.api_key, api_secret=self.secret_key)


    def get_balance(self):

        a=self.agent.get_balances()
        for i in range(4):
         if a[i]['total'] > 10 :
             self.balance = a[i]['total']
             break


    def execution(self,instrument: str, side: str):
        if side == 'buy' : a = 'bids'
        elif side == 'sell' : a = 'asks'
        else : a = None
        price = self.agent.get_orderbook(instrument, 1)
        price = price[a][0][0]

        quantity = self.balance/(3*price)
        quantity = format(quantity, '.2f')
        self.F[instrument] = quantity
        self.agent.place_order(instrument, side, price, quantity)

        if side=='buy': b='bought'
        elif side=='sell': b='sold'
        else: b = None

        print('%s %s has just %s at %.2f'%(quantity,instrument,b,price))

        if side == 'buy' :
            traded_pairs_long.append(instrument)
            available_pairs.remove(instrument)
        elif side == 'sell' :
            traded_pairs_short.append(instrument)
            available_pairs.remove(instrument)
        print(traded_pairs_long,traded_pairs_short,available_pairs)

    def close_position(self,symbolclose: str,sideclose: str):

        price_not = self.agent.get_orderbook(symbolclose, 1)
        if sideclose == 'buy' :
            a = 'asks'
        elif sideclose == 'sell' :
            a = 'bids'
        else:
            a = None
        price=price_not[a][0][0]

        self.agent.place_order(symbolclose, sideclose, price, self.F[symbolclose],reduce_only=True)

        if sideclose=='buy': a='short'
        elif sideclose=='sell': a='long'
        else: a = None
        print('%s position of %s has just closed at %.2f'%(a,symbolclose,price))


        if sideclose == 'buy':
            traded_pairs_short.remove(symbolclose)
            available_pairs.append(symbolclose)

        elif sideclose == 'sell':
            traded_pairs_long.remove(symbolclose)
            available_pairs.append(symbolclose)

